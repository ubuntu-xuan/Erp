{% extends "base.html" %}

{% block title %}配件出库{% endblock%}


{% block styles %}
    {{ super() }}
{% endblock %}

{% block content %}
       <!-- page content -->
        <div class="right_col" role="main">
            <div class="row">
                <div class="col-md-11">
                    <h4 align="center" >配件出库</h4>
                    <h5 align="center">< {{ get_name }} ></h5>              
                </div>
            </div>

            <div id="toolbar">
                <button id="remove" class="btn btn-danger" disabled>
                    <i class="glyphicon glyphicon-remove"></i> 删除
                </button>

                <button id="add" class="btn btn-success" >
                    <i class="glyphicon glyphicon-plus"></i> 增加
                </button>

                <button id="return" class="btn btn-primary" >
                     <i class="glyphicon glyphicon glyphicon-arrow-left"></i> 返回
                </button>


            </div>

            <br>
            <div class="row" >
                    <div class="col-md-12" >
                        <div class="fixed-table-container" >
                            <div class="fixed-table-header" >
                                <table class="table table-hover  " id="table" >

                                </table>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        </div>
        <!-- /page content -->

        <!-- footer content -->
        <footer>

          <div class="clearfix"></div>
        </footer>
        <!-- /footer content -->


{% endblock %}

{% block scripts %}
    {{ super() }}

    <script>
        function initTable() {
        //先销毁表格
{#        $('#table').bootstrapTable('destroy');#}

          //处理返回的url的参数
          function GetRequest() {  
                var url = location.search; //获取url中"?"符后的字串
                var theRequest = new Object();  
                if (url.indexOf("?") != -1) {  
                    var str = url.substr(1);  
                    strs = str.split("&");  
                    for (var i = 0; i < strs.length; i++) {  
                        theRequest[strs[i].split("=")[0]] = (strs[i].split("=")[1]);  
                    }  
                }  
                return theRequest;  
           }
           
           var Request = new Object();  
           Request = GetRequest();

           //alert(Request["in"]);    这里要构造参数
           json_url = '/repertory/fittings_out/return_json?out=' +Request["out"] 




        //初始化表格,动态从服务器加载数据
        $("#table").bootstrapTable({
{#            method: "get",  //使用get请求到服务器获取数据#}
            url: json_url,
            striped: true,  //表格显示条纹
            pagination: true, //启动分页
            pageSize: 50,  //每页显示的记录数
            pageNumber:1, //当前第几页
            pageList: [5, 10, 15, 20, 25,50],  //记录数可选列表
            search: true,  //是否启用查询
            showColumns: true,  //显示下拉框勾选要显示的列
            showRefresh: true,  //显示刷新按钮
            singleSelect: true,
            checkboxHeader:true,
            detailFormatter:true,
            checkboxHeader:true,
            uniqueId:"id",
            toolbar: '#toolbar',
            toolbarAlign:"left",
            checkboxHeader:true,
            sidePagination: "client",
            paginationVAlign:'top',
            showExport:true,
            exportDataType: "all",
            sortOrder: 'desc',
            locale: "zh-CN",
{#            showToggle:true,#}
{#            toolbar: '#toolbar',#}
{#            sidePagination: "client", //表示服务端请求#}
            //设置为undefined可以获取pageNumber，pageSize，searchText，sortName，sortOrder
            //设置为limit可以获取limit, offset, search, sort, order
            {#                checkbox: true#}
            columns: [{
                field: 'state',
                checkbox: true,

            },{
                field: 'id',
                title: 'ID',
                align: 'center',
                sortable: true,

            },{
                field: 'dates',
                title: '日期',
                align: 'center',
                sortable: true,
                editable: {
                    type: 'text',
                    title: '日期',
                    emptytext: '*',
{#                    validate: function (value) {#}
{#                        value = $.trim(value);#}
{#                        if (!value) {#}
{#                            return 'This field is required';#}
{#                        }#}
{#                    },#}
                },
            },
{#                ,{#}
{#                field: 'name',#}
{#                title: '名称/型号',#}
{#                align: 'center',#}
{#                editable: {#}
{#                    type: 'text',#}
{#                    title: '名称/型号',#}
{#                    emptytext:'*',#}
{#                    source: function () {#}
{#                        var result = [];#}
{#                        $.ajax({#}
{#                            url: '/repertory/get_delivery_data',#}
{#                            async: false,#}
{#                            type: "post",#}
{#                            data: {},#}
{#                            dataType:'json',#}
{#                            success: function (data,sta) {#}
{#                                alert(data);#}
{#                                $.each( data, function (i, value) {#}
{#
{#                                    alert( "item #" + i + " its value is: " + value['name'] );#}
{#                                    result.push({ value: value['name'], text: value['name'] });#}
{#                                });#}
{#                            }#}
{#                        });#}
{#                        return result;#}
{#                    }#}
{#                    source: [#}
{#                                {'散热片': '散热片'},#}
{#                                {'开关线': '开关线'},#}
{#                                {'开关PDB板': '开关PDB板'},#}
{#                                {'上下盖  整套': '上下盖  整套'},#}
{#                                {'左右角  R L': '左右角  R L'},#}
{#                                {'包装螺丝': '包装螺丝'},#}
{#                                {'小头电源': '小头电源'},#}
{#                                {'大头电源': '大头电源'},#}
{#                                {'外箱': '外箱'},#}
{#                                {'E300开关': 'E300开关'},#}
{#                                {'E300外壳': 'E300外壳'},#}
{#                                {'PDB板': 'PDB板'},#}
{#                                {'12V3A电源': '12V3A电源'},#}
{#                                {'12V5A电源': '12V5A电源'},#}
{#                                {'保修卡': '保修卡'},#}
{#                                {'合格证': '合格证'},#}
{#                                {'合格证  旧': '合格证  旧'},#}
{#                                {'合格证  定制': '合格证  定制'},#}
{#                                {'包装彩盒  旧': '包装彩盒  旧'},#}
{#                                {'包装彩盒  新': '包装彩盒  新'},#}
{#                                {'X86包装彩盒': 'X86包装彩盒'},#}
{#                                {'包装彩盒  中性': '包装彩盒  中性'},#}
{#                                {'AX500包装彩盒 中性': 'AX500包装彩盒 中性'},#}
{#                                {'AX700彩盒 中性': 'AX700彩盒 中性'},#}
{#                                {'AX700彩盒': 'AX700彩盒'},#}
{#                                {'说明书': '说明书'},#}
{#                                {'说明书  旧': '说明书  旧'},#}
{#                                {'说明书  新': '说明书  新'},#}
{#                                {'说明书  中性': '说明书  中性'},#}
{#                                {'说明书  定制': '说明书  定制'},#}
{#                                {'C100说明书': 'C100说明书'},#}
{#                                {'AX700说明书': 'AX700说明书'},#}
{#                                {'A9说明书  新': 'A9说明书  新'},#}
{#                                {'X86说明书  新': 'X86说明书  新'},#}
{#                                {'X86说明书': 'X86说明书'},#}
{#                                {'珍珠泡棉': '珍珠泡棉'},#}
{#                                {'X86珍珠棉': 'X86珍珠棉'},#}
{#                                {'黑色挡板': '黑色挡板'},#}
{#                    ]#}

{#                    validate: function (value) {#}
{#                        value = $.trim(value);#}
{#                        if (!value) {#}
{#                            return 'This field is required';#}
{#                        }#}
{#                    },#}
{#                },#}

             {
                field: 'nums',
                title: '数量(pcs)',
                align: 'center',
                editable: {
                    type: 'text',
                    title: '数量',
                    validate: function (value) {
                        value = $.trim(value);
                        if (!value) {
                            return 'This field is required';
                        }
                    },
                },
{#                footerFormatter: totalPriceFormatter#}
            },{
                field: 'purpose',
                title: '用途',
                align: 'center',
                editable: {
                    type: 'text',
                    title: '用途',
                    emptytext: '*',
                },
            },{
                field: 'receiptor',
                title: '领取人',
                align: 'center',
                editable: {
                    type: 'text', //select
                    title: '领取人',
                    emptytext: '*',
                    {#source: [
                         { value: '杨木娇', text: '杨木娇' },
                         { value: '李秀荣', text: '李秀荣' },
                         { value: '梁嘉和', text: '梁嘉和' },
                         { value: '梁嘉惠', text: '梁嘉惠' },
                    ],#}
                    validate: function (value) {
                        value = $.trim(value);
                        if (!value) {
                            return 'This field is required';
                        }
                    },
                },
            },{
                field: 'remarks',
                title: '备注',
                align: 'center',
                editable: {
                    type: 'text',
                    title: '备注',
                    emptytext: '*',
                }

                }],

{#            onClickRow:function(row,tr){#}
{#                alert(row.Mac);#}
{#                window.location='';#}
{#            },#}

            queryParamsType : "undefined",

            onEditableSave: function (field, row, oldValue, $el) {
                var Request = new Object();  
                Request = GetRequest();
                $.ajax({
                    type: "post",
                    url: "/repertory/fittings_out",
                    data: {
                        'row':row,
                        'oldValue':oldValue,
                        'write_out':Request["out"],  
                    },
                    dataType: 'JSON',
                    success: function (data, status) {
                        if (status == "success") {
                            alert('提交数据成功');
                        }
                    },
{#                    error: function () {#}
{#                        alert('编辑失败');#}
{#                    },#}
                    complete: function () {

                    }
                });
            }
        });

{#        function operateFormatter(value, row, index) {#}
{#                return [#}
{#            '<a class="like" href="javascript:void(0)" title="Like">',#}
{#            '<i class="glyphicon glyphicon-heart"></i>',#}
{#            '</a>  ',#}
{#            '<a class="remove" href="javascript:void(0)" title="Remove">',#}
{#            '<i class="glyphicon glyphicon-remove"></i>',#}
{#            '</a>'#}
{#        ].join('');#}
{#    }#}


      }

{#      function totalPriceFormatter(data) {#}
{#            var total = 0;#}
{#            $.each(data, function (i, row) {#}
{#                total += +(row.nums.substring(1));#}
{#            });#}
{#            return  total;#}
{#      }#}

      $(document).ready(function () {
          //处理返回的url的参数
          function GetRequest() {  
                var url = location.search; //获取url中"?"符后的字串
                var theRequest = new Object();  
                if (url.indexOf("?") != -1) {  
                    var str = url.substr(1);  
                    strs = str.split("&");  
                    for (var i = 0; i < strs.length; i++) {  
                        theRequest[strs[i].split("=")[0]] = (strs[i].split("=")[1]);  
                    }  
                }  
                return theRequest;  
           }
           
           var Request = new Object();  
           Request = GetRequest();

          //调用函数，初始化表格
          initTable();

          function getIdSelections() {
            return $.map($table.bootstrapTable('getSelections'), function (row) {
                return row.id
            });
          }

          function getNameSelections() {
            return $.map($table.bootstrapTable('getSelections'), function (row) {
                return row.name
            });
          }

          var $table = $('#table'),$remove = $('#remove'),$add = $('#add'),$return= $('#return');
          selections = [];

          $table.on('page-change.bs.table', function () {
            $('#table').bootstrapTable('scrollTo', '10px');
          });

          $table.on('check.bs.table uncheck.bs.table ' +
                'check-all.bs.table uncheck-all.bs.table', function () {
            $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
            // save your data, here just save the current page
                selections = getIdSelections();
            // push or splice the selections if you want to save all data selections
            });

          $table.on('all.bs.table', function (e, name, args) {
            console.log(name, args);
          });

          $return.click(function (){
              window.location.href = "{{ url_for('main.fittings') }}";
          });


          $remove.click(function () {
            var Request = new Object();  
            Request = GetRequest();
            var ids = getIdSelections();
            var remove_name = getNameSelections();

            $.ajax({
                    type:'POST',
                    url:'/repertory/fittings_out',
                    async: false,
                    data:{
                        'ids':ids,
                        'remove_name':remove_name,
                        'write_out':Request["out"],  
                        'del_out':Request["out"],  
                    },
                    dataType:'json',
                    success:function(data){},
                    error:function(xhr,type){}
             });

            $table.bootstrapTable('remove', {
                field: 'id',
                values: ids
            });

            $remove.prop('disabled', true);
          });

          $add.click(function(){
              var Request = new Object();  
              Request = GetRequest();
              $.ajax({
                    type: "post",
                    url: "/repertory/fittings_out",
                    async: false,
                    data:{
                        'add':'add_true',
                        'write_out':Request["out"],  
                        'add_out':Request["out"],  
                    },
                    dataType: 'JSON',
                    success: function (data, status) {
                        if (status == "success") {
                            alert('提交数据成功');
                        }
                    },
{#                    error: function () {#}
{#                        alert('编辑失败');#}
{#                    },#}
                    complete: function () {
                    }
                });

              $table.bootstrapTable('selectPage','last')
              $table.bootstrapTable('refresh', {url: '/repertory/fittings_out/return_json?out=' + Request["out"] }); //这里也要设置
          });


          //当点击查询按钮的时候执行
{#          $("#search").bind("click", initTable);#}
      });

    </script>

{% endblock %}
  </body>
</html>
